/*
 * Copyright 2021, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

plugins {
    id 'net.ltgt.errorprone' version '2.0.2' apply false
    id 'idea'
}

ext.protoDataVersion = '0.0.10'

//noinspection GroovyAssignabilityCheck
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply from: "$rootDir/version.gradle"

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = "https://europe-maven.pkg.dev/spine-event-engine/releases"
        }
        maven {
            url = "https://europe-maven.pkg.dev/spine-event-engine/snapshots"
        }
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    apply plugin: 'net.ltgt.errorprone'
    apply from: "$rootDir/gradle/static-analysis.gradle"

    dependencies {
        errorprone "com.google.errorprone:error_prone_core:$deps.versions.errorProne"
        errorproneJavac "com.google.errorprone:javac:$deps.versions.errorProneJavac"
        implementation (
                "com.google.guava:guava:$deps.versions.guava",
                "org.checkerframework:checker-qual:$deps.versions.checkerFramework"
        )
        runtimeOnly "io.grpc:grpc-netty:$deps.versions.grpc"
        testImplementation (
                "org.junit.jupiter:junit-jupiter-api:$deps.versions.junit5",
                "org.junit.jupiter:junit-jupiter-params:$deps.versions.junit5",
                "org.apiguardian:apiguardian-api:$deps.versions.apiGuardian",
        )
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$deps.versions.junit5"
    }

    configurations.all {
        resolutionStrategy {
            force(
                    "com.google.guava:guava:$deps.versions.guava",
                    "com.google.truth:truth:1.1.3",
                    "com.google.truth.extensions:truth-java8-extension:1.1.3",
                    "com.google.truth.extensions:truth-proto-extension:1.1.3"
            )
        }
    }

    tasks.withType(JavaCompile) {

        // Explicitly states the encoding of the source and test source files, ensuring
        // correct execution of the `javac` task.
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }
}
