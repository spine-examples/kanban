/*
 * Copyright 2021, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

final requestFile = "$buildDir/protodata/types.bin"

protobuf {
    plugins {
        protodata {
            artifact = 'io.spine.protodata:protoc:0.0.8:exe@jar'
        }
    }

    generateProtoTasks {
        all().each { final task ->
            task.plugins {
                protodata {
                    option requestFile
                }
            }
        }
    }
}

task launchProtoData(type: Exec) {
    dependsOn(':protodata:jar', 'generateProto')
    tasks.getByName('compileJava').dependsOn(it)

    final projectProtodata = project(':protodata')

    commandLine(
            'protodata',
            '--plugin', 'io.spine.kanban.codegen.JavaValidationPlugin',
            '--renderer', 'io.spine.kanban.codegen.ValidateInsertionPointPrinter',
            '--renderer', 'io.spine.kanban.codegen.JavaValidationRenderer',
            '--options', 'io.spine.kanban.codegen.SpineOptionsProvider',
            '--request', requestFile,
            '--src', "$projectDir/generated/main/java",
            '--user-classpath', projectProtodata.configurations.runtimeClasspath.asPath +
                    File.pathSeparator +
                    projectProtodata.tasks.jar.outputs.files.asPath
    )
}
